generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  firebaseUID String   @unique
  email       String   @unique
  name        String?
  phone       String?
  role        String   @default("customer")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  customer Customer?
  provider Provider?
}

model Customer {
  id        String   @id @default(uuid())
  userId    String   @unique
  name      String
  email     String   @unique
  phone     String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  bookings Booking[]
}

model Provider {
  id         String   @id @default(uuid())
  userId     String   @unique
  name       String
  services   String[]
  experience Int
  available  Boolean  @default(true)
  rating     Float    @default(0)
  bio        String?
  location   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  bookings Booking[]
}

model ServiceCategory {
  id       String  @id @default(uuid())
  name     String
  icon     String?
  color    String?
  image    String?
  isActive Boolean @default(true)

  services Service[]
}

model Service {
  id          String  @id @default(uuid())
  categoryId  String
  name        String
  price       Float
  duration    Int
  description String?
  image       String?
  isActive    Boolean @default(true)

  category ServiceCategory @relation(fields: [categoryId], references: [id])
}

model Booking {
  id         String   @id @default(uuid())
  providerId String
  customerId String
  serviceId  String
  startTime  DateTime
  endTime    DateTime
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  provider Provider @relation(fields: [providerId], references: [id])
  customer Customer @relation(fields: [customerId], references: [id])
}

model Review {
  id         String   @id @default(uuid())
  bookingId  String   @unique
  providerId String
  customerId String
  rating     Int
  comment    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
